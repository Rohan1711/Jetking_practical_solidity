1) How does actually Smart Contracts Work?
ans=
step 1: a user initiates a transaction from their wallet.
step 2: the transction arrives at the distributed ledeger, where the identity is confirmed.
step 3: the transction includes the code that defines what type of traction is to be executed.
step 4: the trasction are added as a block within blockchain.



2) Write a Smart Contract for understanding Counter Contract in
Solidity Programming Language.

smart contract-
// SPDX-License-Identifier:MIT
pragma solidity >=0.7.0 < 0.9.0;

contract Counter{
    uint public count;
    function increment() public{
        count+=1;
    }
     function decrement() public{
        count-=1;
    }
}



3) Write a Smart Contract for understanding Conditional
Statements in Solidity Programming Language.
smart contract-

// SPDX-License-Identifier:MIT
pragma solidity >=0.7.0 < 0.9.0;

contract ConditionalStatement{
    function IfElsestatement(uint _num) public pure returns(uint)
    {
        if(_num<10)
        {
            return 1;
        }
        else if(_num<30)
        {
            return 2;
        }
        else 
        {
            return 3;
        }  
    }

    function TernaryOperator(uint _age) public pure returns(string memory)
    {
        return _age>=18 ? "eligible for vote":"not eligible for vote"; 
    }
}


